$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"
import [Dotless CvDecompose] from"../../../support/gr.mjs"

glyph-module

glyph-block Letter-Latin-Eth : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	create-glyph 'dInsular' 0xA77A : glyph-proc
		include : MarkSet.b
		include : OShape (Ascender * 0.6) 0 SB RightSB
		local ymiddlea : (Ascender * 0.6 + SmallArchDepthA - SmallArchDepthB) / 2
		include : dispiro
			widths.lhs
			g4.up.start (RightSB - OX) ymiddlea
			quadControls 0 0.8
			g4 (SB + Stroke * 1.1) Ascender

	create-glyph 'eth' 0xF0 : glyph-proc
		include [refer-glyph 'dInsular'] AS_BASE ALSO_METRICS
		include : dispiro
			widths.center OverlayStroke
			flat [mix SB RightSB 0.1] [mix XH Ascender (-0.1)]
			curl [mix SB RightSB 0.95] [mix XH Ascender 0.3]

	create-glyph 'DInsular' 0xA779 : glyph-proc
		include : MarkSet.capital
		local df : DivFrame 1
		local fine : mix ShoulderFine Stroke 0.125
		local cofine : Stroke - fine
		local top : CAP - O

		include : union
			dispiro
				flat (df.middle + Stroke * TanSlope - O) (top - cofine) [widths.lhs fine]
				curl (df.middle - CorrectionOMidX * fine) (top - cofine)
				archv
				flat df.leftSB (CAP - ArchDepthA) [widths.lhs Stroke]
				curl df.leftSB ArchDepthB
				arcvh
				g4 (df.middle + CorrectionOMidS) 0
				archv
				flat df.rightSB ArchDepthA
				curl df.rightSB (CAP - ArchDepthB)
				arcvh
				straight.left.end (df.middle - CorrectionOMidS) top
			dispiro
				flat (df.middle + CorrectionOMidS) top [widths.lhs : AdviceStroke 3]
				curl [mix 0 df.leftSB 0.5] top
