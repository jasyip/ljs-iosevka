$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"
import [DependentSelector] from "@iosevka/glyph/relation"

glyph-module

glyph-block Letter-Armenian-Upper-Za-Group : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : SerifFrame
	glyph-block-import Letter-Armenian-Shared-Shapes : ArmHBar

	do "Za"
		create-glyph 'armn/Za' 0x536 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			local fine : df.mvs * (ShoulderFine / Stroke)
			local fine2 : df.adviceStroke 4
			include : dispiro
				widths.rhs df.mvs
				straight.up.start df.leftSB (CAP - ArchDepthA)
				arch.rhs CAP (sw -- df.mvs)
				flat df.rightSB (CAP - ArchDepthB)
				curl df.rightSB (df.mvs - fine + ArchDepthA)
				arcvh
				flat df.leftSB (df.mvs - fine) [widths.rhs fine]
			include : VBar.l df.leftSB 0 VJut fine2
			include : [ArmHBar.normal df 1].base

	do "Jheh"
		create-glyph 'armn/Jheh' 0x54B : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			local fine : df.mvs * (ShoulderFine / Stroke)
			local fine2 : df.adviceStroke 4
			local x1 : df.middle + [HSwToV : [StrokeWidthBlend 0 0.5] * fine2]
			include : dispiro
				widths.rhs df.mvs
				straight.up.start df.leftSB (CAP - ArchDepthA)
				arch.rhs CAP (sw -- df.mvs)
				flat df.rightSB (CAP - ArchDepthB)
				curl df.rightSB (df.mvs - fine + ArchDepthA)
				arcvh
				flat df.leftSB (df.mvs - fine) [widths.rhs fine]
			include : intersection
				spiro-outline
					flat df.rightSB CAP
					curl df.rightSB (df.mvs - fine + ArchDepthA)
					arcvh
					corner df.leftSB (df.mvs - fine) [widths.rhs fine]
					corner df.leftSB CAP
				dispiro
					widths.lhs df.mvs
					flat df.leftSB (CAP - ArchDepthA)
					curl df.leftSB (CAP - 1.1 * ArchDepthA)
					g4 [pre@mix@post 0.5] [pre@mix@post 0.5] [widths.center df.mvs]
					flat x1 (0.55 * ArchDepthB) [widths.rhs fine2]
					curl x1 (0.5 * ArchDepthB) [widths.rhs fine2]
					arcvh
					flat df.leftSB (df.mvs - fine) [widths.rhs fine]
			include : VBar.l df.leftSB 0 VJut fine2
			include : [ArmHBar.normal df 1].base
