$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"
import [DependentSelector] from "@iosevka/glyph/relation"

glyph-module

glyph-block Letter-Armenian-Hook-Group : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : SerifFrame
	glyph-block-import Letter-Armenian-Shared-Shapes : ArmHBar LeftHook RightHook

	do "Ben"
		create-glyph 'armn/Ben' 0x532 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : RightHook df CAP df.mvs SLAB 0
			include : [ArmHBar.normal df 1].mid

	do "Da"
		create-glyph 'armn/Da' 0x534 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : LeftHook df CAP df.mvs SLAB 0
			include : [ArmHBar.right df 1 SLAB].mid

	do "Ech"
		create-glyph 'armn/Ech' 0x535 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : LeftHook df CAP df.mvs SLAB 0
			include : FlipAround df.middle (CAP / 2)
			include : [ArmHBar.normal df 1].high

	do "Et"
		create-glyph 'armn/Et' 0x538 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : RightHook df CAP df.mvs
			include : [ArmHBar.normal df 1].base
			if SLAB : begin
				local sf : SerifFrame.fromDf df CAP 0
				include sf.lb.outer

	do "Ini"
		create-glyph 'armn/Ini' 0x53B : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : RightHook df XH df.mvs
			include : VBar.l df.leftSB 0 CAP
			if SLAB : begin
				local sf : SerifFrame.fromDf df CAP 0
				include : composite-proc sf.lt.full sf.lb.full

	do "Ken"
		create-glyph 'armn/Ken' 0x53F : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			local midy : XH / 2 - df.mvs / 2
			include : dispiro
				widths.lhs df.mvs
				flat df.leftSB CAP [heading Downward]
				curl df.leftSB (midy + ArchDepthB)
				arch.lhs midy (sw -- df.mvs)
				flat df.rightSB (midy + ArchDepthA)
				curl df.rightSB XH [heading Upward]
			include : VBar.r df.rightSB 0 XH

			if SLAB : begin
				local sf : SerifFrame.fromDf df CAP 0
				local sf2 : SerifFrame.fromDf df XH 0
				include : composite-proc sf.lt.full sf2.rt.full sf.rb.full

	do "Ghat"
		create-glyph 'armn/Ghat' 0x542 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : LeftHook df CAP df.mvs SLAB 0
			include : [ArmHBar.right df 1 SLAB].base

	do "Nu"
		create-glyph 'armn/Nu' 0x546 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : LeftHook df CAP df.mvs SLAB SLAB
			include : FlipAround df.middle (CAP / 2)
			include : [ArmHBar.left df 1 SLAB].top

	do "Peh"
		create-glyph 'armn/Peh' 0x54A : glyph-proc
			local df : include : DivFrame para.diversityM 3
			include : df.markSet.capital
			local ada : df.archDepthA ArchDepth df.mvs
			local adb : df.archDepthB ArchDepth df.mvs
			include : LeftHook df CAP df.mvs SLAB 0 nothing nothing ada adb
			include : VBar.m df.middle (XH / 2) (CAP - 0.5 * df.mvs) df.mvs

	do "Vew"
		create-glyph 'armn/Vew' 0x54E : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			local midy : XH / 2 - df.mvs / 2
			include : dispiro
				widths.lhs df.mvs
				flat df.leftSB XH [heading Downward]
				curl df.leftSB (midy + ArchDepthB)
				arch.lhs midy (sw -- df.mvs)
				flat df.rightSB (midy + ArchDepthA)
				curl df.rightSB XH [heading Upward]
			include : VBar.r df.rightSB 0 CAP df.mvs
			include : [ArmHBar.right df 1 SLAB].base

			if SLAB : begin
				local sf : SerifFrame.fromDf df XH 0
				local sf2 : SerifFrame.fromDf df CAP 0
				include : composite-proc sf.lt.full sf2.rt.full sf.rb.full

	do "Reh"
		create-glyph 'armn/Reh' 0x550 : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : RightHook df CAP df.mvs SLAB 0

	do "Dram"
		glyph-block-import Letter-Shared-Shapes : LetterBarOverlay
		create-glyph 'armn/Dram' 0x58F : glyph-proc
			local df : include : DivFrame 1
			include : df.markSet.capital
			include : LeftHook df CAP df.mvs SLAB 0
			include : LetterBarOverlay.r df.rightSB (CAP * 0.37)
			include : LetterBarOverlay.r df.rightSB (CAP * 0.60 - OverlayStroke * 0.25)
